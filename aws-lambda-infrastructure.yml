AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda functions and S3 database for Synvya subscription system

Parameters:
  ZapriteApiKey:
    Type: String
    Description: Zaprite API key for payment processing
    NoEcho: true
  S3BucketName:
    Type: String
    Default: synvya-subscriptions-prod
    Description: S3 bucket name for subscription database
  CloudFrontDistributionId:
    Type: String
    Default: E3DPPDWMXK3MAD
    Description: CloudFront distribution ID to update

Resources:
  # S3 Bucket for subscription database
  SubscriptionDatabase:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true

  # IAM Role for Lambda functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: synvya-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3DatabaseAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "${SubscriptionDatabase}/*"

  # Lambda Layer for shared dependencies
  SharedLibraryLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: synvya-shared-libs
      Description: Shared libraries for Synvya Lambda functions
      Content:
        S3Bucket: !Ref S3BucketName
        S3Key: layers/shared-libs.zip
      CompatibleRuntimes:
        - nodejs20.x

  # Lambda Functions
  CheckSubscriptionFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-check-subscription
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/check-subscription.zip
      Environment:
        Variables:
          SUBSCRIPTION_DB_BUCKET: !Ref S3BucketName
          AWS_REGION: !Ref AWS::Region
      Timeout: 30

  CheckSubscriptionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt CheckSubscriptionFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  CheckSubscriptionUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CheckSubscriptionFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

  CreateZapriteOrderFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-create-zaprite-order
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/create-zaprite-order.zip
      Environment:
        Variables:
          SUBSCRIPTION_DB_BUCKET: !Ref S3BucketName
          AWS_REGION: !Ref AWS::Region
          ZAPRITE_API_KEY: !Ref ZapriteApiKey
      Timeout: 60

  CreateZapriteOrderUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt CreateZapriteOrderFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  CreateZapriteOrderUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateZapriteOrderFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

  PaymentWebhookFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-payment-webhook
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/payment-webhook.zip
      Environment:
        Variables:
          SUBSCRIPTION_DB_BUCKET: !Ref S3BucketName
          AWS_REGION: !Ref AWS::Region
      Timeout: 30

  PaymentWebhookUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt PaymentWebhookFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  PaymentWebhookUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref PaymentWebhookFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

  GetOrderFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-get-order
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/get-order.zip
      Environment:
        Variables:
          ZAPRITE_API_KEY: !Ref ZapriteApiKey
          AWS_REGION: !Ref AWS::Region
      Timeout: 30

  GetOrderUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt GetOrderFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  GetOrderUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetOrderFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

  GetUserOrdersFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-get-user-orders
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/get-user-orders.zip
      Environment:
        Variables:
          SUBSCRIPTION_DB_BUCKET: !Ref S3BucketName
          AWS_REGION: !Ref AWS::Region
      Timeout: 30

  GetUserOrdersUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt GetUserOrdersFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  GetUserOrdersUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetUserOrdersFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

  CheckContactFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: synvya-check-contact
      Runtime: nodejs20.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: lambda-functions/check-contact.zip
      Environment:
        Variables:
          ZAPRITE_API_KEY: !Ref ZapriteApiKey
          AWS_REGION: !Ref AWS::Region
      Timeout: 30

  CheckContactUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt CheckContactFunction.Arn
      AuthType: NONE
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 86400

  CheckContactUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CheckContactFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: NONE

Outputs:
  SubscriptionDatabaseBucket:
    Description: S3 bucket for subscription database
    Value: !Ref SubscriptionDatabase

  CheckSubscriptionUrl:
    Description: URL for check-subscription function
    Value: !GetAtt CheckSubscriptionUrl.FunctionUrl

  CreateZapriteOrderUrl:
    Description: URL for create-zaprite-order function
    Value: !GetAtt CreateZapriteOrderUrl.FunctionUrl

  PaymentWebhookUrl:
    Description: URL for payment-webhook function
    Value: !GetAtt PaymentWebhookUrl.FunctionUrl

  GetOrderUrl:
    Description: URL for get-order function
    Value: !GetAtt GetOrderUrl.FunctionUrl

  GetUserOrdersUrl:
    Description: URL for get-user-orders function
    Value: !GetAtt GetUserOrdersUrl.FunctionUrl

  CheckContactUrl:
    Description: URL for check-contact function
    Value: !GetAtt CheckContactUrl.FunctionUrl 